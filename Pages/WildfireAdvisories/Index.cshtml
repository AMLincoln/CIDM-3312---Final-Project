@*Solution for integrating sorting, filtering, pagination, and conditional disabling of buttons taken from https://learn.microsoft.com/en-us/aspnet/core/data/ef-rp/sort-filter-page?view=aspnetcore-8.0*@
@page
@model CIDM_3312___Final_Project.Pages.WildfireAdvisories.IndexModel

@{
    ViewData["Title"] = "Wildfire Alerts";
}
<br/>
<h1>Wildfire Alerts</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.WildfireAdvisory[0].Title)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.WildfireAdvisory[0].IssueDateAndTime)</a>
            </th>
            <th>Region</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.WildfireAdvisories) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueDateAndTime)
            </td>
            <td>
                @foreach (var region in item.RegionWildfireAdvisories!)
                {
                    @region.Region.Name <br>
                }
            </td>
            <td>
                <a asp-page="./Details" asp-route-id="@item.WildfireAdvisoryId">Details</a> |
                <a asp-page="./Edit" asp-route-id="@item.WildfireAdvisoryId">Edit</a> |
                <a asp-page="./Delete" asp-route-id="@item.WildfireAdvisoryId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<hr/>
@{
    var prevDisabled = !Model.WildfireAdvisories.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.WildfireAdvisories.HasNextPage ? "disabled" : "";
}
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.WildfireAdvisories.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.WildfireAdvisories.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter">Next</a></li>
    </ul>
</nav>
