// <auto-generated />
using System;
using CIDM_3312___Final_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CIDM_3312___Final_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240509071940_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MacroRegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("RegionId");

                    b.HasIndex("MacroRegionId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            RegionId = 1,
                            MacroRegionId = 30,
                            Name = "Randall County, TX"
                        },
                        new
                        {
                            RegionId = 2,
                            MacroRegionId = 1,
                            Name = "Canyon, TX"
                        },
                        new
                        {
                            RegionId = 3,
                            MacroRegionId = 1,
                            Name = "Palo Duro Canyon State Park, TX"
                        },
                        new
                        {
                            RegionId = 4,
                            MacroRegionId = 1,
                            Name = "Zita, TX"
                        },
                        new
                        {
                            RegionId = 5,
                            MacroRegionId = 1,
                            Name = "Lake Tanglewood, TX"
                        },
                        new
                        {
                            RegionId = 6,
                            MacroRegionId = 1,
                            Name = "Umbarger, TX"
                        },
                        new
                        {
                            RegionId = 7,
                            MacroRegionId = 30,
                            Name = "Potter County, TX"
                        },
                        new
                        {
                            RegionId = 8,
                            MacroRegionId = 7,
                            Name = "Amarillo, TX"
                        },
                        new
                        {
                            RegionId = 9,
                            MacroRegionId = 7,
                            Name = "Gentry, TX"
                        },
                        new
                        {
                            RegionId = 10,
                            MacroRegionId = 7,
                            Name = "Gluck, TX"
                        },
                        new
                        {
                            RegionId = 11,
                            MacroRegionId = 7,
                            Name = "Ady, TX"
                        },
                        new
                        {
                            RegionId = 12,
                            MacroRegionId = 7,
                            Name = "Bishop Hills, TX"
                        },
                        new
                        {
                            RegionId = 13,
                            MacroRegionId = 30,
                            Name = "Carson County, TX"
                        },
                        new
                        {
                            RegionId = 14,
                            MacroRegionId = 13,
                            Name = "Skellytown, TX"
                        },
                        new
                        {
                            RegionId = 15,
                            MacroRegionId = 13,
                            Name = "Wilhelm, TX"
                        },
                        new
                        {
                            RegionId = 16,
                            MacroRegionId = 13,
                            Name = "Abell, TX"
                        },
                        new
                        {
                            RegionId = 17,
                            MacroRegionId = 13,
                            Name = "Panhandle, TX"
                        },
                        new
                        {
                            RegionId = 18,
                            MacroRegionId = 13,
                            Name = "White Deer, TX"
                        },
                        new
                        {
                            RegionId = 19,
                            MacroRegionId = 30,
                            Name = "Armstrong County, TX"
                        },
                        new
                        {
                            RegionId = 20,
                            MacroRegionId = 19,
                            Name = "Washburn, TX"
                        },
                        new
                        {
                            RegionId = 21,
                            MacroRegionId = 19,
                            Name = "Claude, TX"
                        },
                        new
                        {
                            RegionId = 22,
                            MacroRegionId = 19,
                            Name = "Wayside, TX"
                        },
                        new
                        {
                            RegionId = 23,
                            MacroRegionId = 19,
                            Name = "Goodnight, TX"
                        },
                        new
                        {
                            RegionId = 24,
                            MacroRegionId = 30,
                            Name = "Moore County, TX"
                        },
                        new
                        {
                            RegionId = 25,
                            MacroRegionId = 24,
                            Name = "Dumas, TX"
                        },
                        new
                        {
                            RegionId = 26,
                            MacroRegionId = 24,
                            Name = "Masterson, TX"
                        },
                        new
                        {
                            RegionId = 27,
                            MacroRegionId = 24,
                            Name = "Bryden, TX"
                        },
                        new
                        {
                            RegionId = 28,
                            MacroRegionId = 24,
                            Name = "Sunray, TX"
                        },
                        new
                        {
                            RegionId = 29,
                            MacroRegionId = 24,
                            Name = "Cactus, TX"
                        },
                        new
                        {
                            RegionId = 30,
                            Name = "Texas Panhandle"
                        });
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.RegionWildfireAdvisory", b =>
                {
                    b.Property<int>("WildfireAdvisoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WildfireAdvisoryId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("RegionWildfireAdvisories");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DiscoveryDateandTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReporterEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReporterName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReporterPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("RiskStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReportId");

                    b.HasIndex("RegionId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.ReportImage", b =>
                {
                    b.Property<int>("ReportImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Bytes")
                        .HasColumnType("BLOB");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReportId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Size")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportImageId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportImages");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.WildfireAdvisory", b =>
                {
                    b.Property<int>("WildfireAdvisoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDateAndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssuingAuthority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WildfireAdvisoryId");

                    b.ToTable("WildfireAdvisories");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "MacroRegion")
                        .WithMany("Subregions")
                        .HasForeignKey("MacroRegionId");

                    b.Navigation("MacroRegion");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.RegionWildfireAdvisory", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "Region")
                        .WithMany("RegionWildfireAdvisories")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIDM_3312___Final_Project.Models.WildfireAdvisory", "WildfireAdvisory")
                        .WithMany("RegionWildfireAdvisories")
                        .HasForeignKey("WildfireAdvisoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("WildfireAdvisory");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.ReportImage", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Report", "Report")
                        .WithMany("ReportImages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.Navigation("RegionWildfireAdvisories");

                    b.Navigation("Subregions");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.Navigation("ReportImages");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.WildfireAdvisory", b =>
                {
                    b.Navigation("RegionWildfireAdvisories");
                });
#pragma warning restore 612, 618
        }
    }
}
