// <auto-generated />
using System;
using CIDM_3312___Final_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CIDM_3312___Final_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MacroRegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RiskLevel")
                        .HasColumnType("TEXT");

                    b.HasKey("RegionId");

                    b.HasIndex("MacroRegionId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            RegionId = 1,
                            Name = "Randall County",
                            RiskLevel = "Medium"
                        },
                        new
                        {
                            RegionId = 2,
                            MacroRegionId = 1,
                            Name = "Canyon, TX",
                            RiskLevel = "High"
                        },
                        new
                        {
                            RegionId = 3,
                            MacroRegionId = 1,
                            Name = "Palo Duro Canyon State Park",
                            RiskLevel = "Low"
                        },
                        new
                        {
                            RegionId = 4,
                            MacroRegionId = 1,
                            Name = "Zita, TX",
                            RiskLevel = "Medium"
                        },
                        new
                        {
                            RegionId = 5,
                            MacroRegionId = 1,
                            Name = "Lake Tanglewood",
                            RiskLevel = "Medium"
                        },
                        new
                        {
                            RegionId = 6,
                            MacroRegionId = 1,
                            Name = "Umbarger, TX",
                            RiskLevel = "Low"
                        },
                        new
                        {
                            RegionId = 7,
                            Name = "Potter County",
                            RiskLevel = "Low"
                        },
                        new
                        {
                            RegionId = 8,
                            MacroRegionId = 7,
                            Name = "Amarillo, TX",
                            RiskLevel = "Low"
                        },
                        new
                        {
                            RegionId = 9,
                            MacroRegionId = 7,
                            Name = "Alibates Flint Quarries National Monument",
                            RiskLevel = "Low"
                        });
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.RegionWildfireAdvisory", b =>
                {
                    b.Property<int>("WildfireAdvisoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WildfireAdvisoryId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("RegionWildfireAdvisories");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DiscoveryDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("DiscoveryTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReportStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReporterEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReporterName")
                        .HasColumnType("TEXT");

                    b.Property<string>("String")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportId");

                    b.HasIndex("RegionId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.ReportImage", b =>
                {
                    b.Property<int>("ReportImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Bytes")
                        .HasColumnType("BLOB");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReportId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Size")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportImageId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportImages");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.WildfireAdvisory", b =>
                {
                    b.Property<int>("WildfireAdvisoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDateAndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssuingAuthority")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("WildfireAdvisoryStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("WildfireAdvisoryId");

                    b.ToTable("WildfireAdvisories");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "MacroRegion")
                        .WithMany("Subregions")
                        .HasForeignKey("MacroRegionId");

                    b.Navigation("MacroRegion");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.RegionWildfireAdvisory", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "Region")
                        .WithMany("RegionWildfireAdvisories")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIDM_3312___Final_Project.Models.WildfireAdvisory", "WildfireAdvisory")
                        .WithMany("RegionWildfireAdvisories")
                        .HasForeignKey("WildfireAdvisoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("WildfireAdvisory");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.ReportImage", b =>
                {
                    b.HasOne("CIDM_3312___Final_Project.Models.Report", "Report")
                        .WithMany("ReportImages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Region", b =>
                {
                    b.Navigation("RegionWildfireAdvisories");

                    b.Navigation("Subregions");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.Report", b =>
                {
                    b.Navigation("ReportImages");
                });

            modelBuilder.Entity("CIDM_3312___Final_Project.Models.WildfireAdvisory", b =>
                {
                    b.Navigation("RegionWildfireAdvisories");
                });
#pragma warning restore 612, 618
        }
    }
}
